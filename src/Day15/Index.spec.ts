import { computeCount, computeRadius, day15, maxMinX } from ".";

describe("", () => {
  test("", () => {
    const res = computeRadius([
      [2, 18, -2, 15],
      [9, 16, 10, 16],
      [13, 2, 15, 3],
      [12, 14, 10, 16],
      [10, 20, 10, 16],
      [14, 17, 10, 16],
      [8, 7, 2, 10],
      [2, 0, 2, 10],
      [0, 11, 2, 10],
      [20, 14, 25, 17],
      [17, 20, 21, 22],
      [16, 7, 15, 3],
      [14, 3, 15, 3],
      [20, 1, 15, 3],
    ]);
    expect(res).toEqual([7, 1, 3, 4, 4, 5, 9, 10, 3, 8, 6, 5, 1, 7]);
  });
  test("", () => {
    const res = maxMinX(
      [
        [2, 18, -2, 15],
        [9, 16, 10, 16],
        [13, 2, 15, 3],
        [12, 14, 10, 16],
        [10, 20, 10, 16],
        [14, 17, 10, 16],
        [8, 7, 2, 10],
        [2, 0, 2, 10],
        [0, 11, 2, 10],
        [20, 14, 25, 17],
        [17, 20, 21, 22],
        [16, 7, 15, 3],
        [14, 3, 15, 3],
        [20, 1, 15, 3],
      ],
      [7, 1, 3, 4, 4, 5, 9, 10, 3, 8, 6, 5, 1, 7]
    );
    expect(res).toEqual([-8, 28]);
  });
  test("", () => {
    const res = computeCount(
      [
        [2, 18, -2, 15],
        [9, 16, 10, 16],
        [13, 2, 15, 3],
        [12, 14, 10, 16],
        [10, 20, 10, 16],
        [14, 17, 10, 16],
        [8, 7, 2, 10],
        [2, 0, 2, 10],
        [0, 11, 2, 10],
        [20, 14, 25, 17],
        [17, 20, 21, 22],
        [16, 7, 15, 3],
        [14, 3, 15, 3],
        [20, 1, 15, 3],
      ],
      10
    );
    expect(res).toEqual(26);
  });
  test.only("", () => {
    const res = day15();
    expect(res).toEqual(0);
  });
});
